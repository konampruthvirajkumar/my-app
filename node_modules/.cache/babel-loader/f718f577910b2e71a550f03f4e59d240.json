{"ast":null,"code":"import { put, takeEvery, call, all, select } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction fetchQuakes() {\n  return axios.get('https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/significant_week.geojson');\n}\n\nexport function* workerGetTableResults() {\n  try {\n    console.log('handleLoadQuakes');\n    let resp = yield call(fetchQuakes);\n    yield put({\n      type: 'LOAD_TABLE_RESULTS_SUCCESS',\n      results: resp.data\n    });\n  } catch (e) {\n    console.error(e);\n  }\n}\nexport function* watchGetTableResults() {\n  yield takeEvery('LOAD_TABLE_RESULTS', workerGetTableResults);\n}","map":{"version":3,"sources":["C:\\Users\\konam\\OneDrive\\Documents\\GitHub\\my-app\\src\\redux\\sagas\\table.sagas.js"],"names":["put","takeEvery","call","all","select","axios","fetchQuakes","get","workerGetTableResults","console","log","resp","type","results","data","e","error","watchGetTableResults"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,IAAzB,EAA+BC,GAA/B,EAAoCC,MAApC,QAAkD,oBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,WAAT,GAAuB;AACnB,SAAOD,KAAK,CAACE,GAAN,CAAU,oFAAV,CAAP;AACH;;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,QAAIC,IAAI,GAAG,MAAMT,IAAI,CAACI,WAAD,CAArB;AAEA,UAAMN,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAE,4BADA;AAENC,MAAAA,OAAO,EAAEF,IAAI,CAACG;AAFR,KAAD,CAAT;AAIH,GARD,CAQE,OAAOC,CAAP,EAAU;AACRN,IAAAA,OAAO,CAACO,KAAR,CAAcD,CAAd;AACH;AACJ;AAED,OAAO,UAAUE,oBAAV,GAAiC;AACpC,QAAMhB,SAAS,CAAC,oBAAD,EAAuBO,qBAAvB,CAAf;AACH","sourcesContent":["import { put, takeEvery, call, all, select } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nfunction fetchQuakes() {\r\n    return axios.get('https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/significant_week.geojson');\r\n}\r\n\r\nexport function* workerGetTableResults() {\r\n    try {\r\n        console.log('handleLoadQuakes');\r\n        let resp = yield call(fetchQuakes);\r\n\r\n        yield put({\r\n            type: 'LOAD_TABLE_RESULTS_SUCCESS',\r\n            results: resp.data,\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n}\r\n\r\nexport function* watchGetTableResults() {\r\n    yield takeEvery('LOAD_TABLE_RESULTS', workerGetTableResults);\r\n}"]},"metadata":{},"sourceType":"module"}