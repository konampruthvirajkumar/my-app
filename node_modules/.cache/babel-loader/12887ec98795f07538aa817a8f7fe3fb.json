{"ast":null,"code":"import { put, takeEvery, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { loadTableResultsSuccess } from '../actions/table.actions';\n\nfunction fetchQuakes() {\n  return axios.get(\"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/significant_week.geojson\");\n}\n\nexport function* workerGetUser() {\n  try {\n    console.log(\"handleLoadQuakes\");\n    let resp = yield call(fetchQuakes);\n    yield put(loadTableResultsSuccess(resp.data));\n  } catch (e) {\n    console.error(e);\n  }\n}\nexport function* watchGetUser() {\n  yield takeEvery(\"LOAD_TABLE_RESULTS\", workerGetTableResults);\n}","map":{"version":3,"sources":["C:\\Users\\konam\\OneDrive\\Documents\\GitHub\\my-app\\src\\redux\\sagas\\user.sagas.js"],"names":["put","takeEvery","call","axios","loadTableResultsSuccess","fetchQuakes","get","workerGetUser","console","log","resp","data","e","error","watchGetUser","workerGetTableResults"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,uBAAR,QAAsC,0BAAtC;;AAEA,SAASC,WAAT,GAAuB;AACrB,SAAOF,KAAK,CAACG,GAAN,CACL,oFADK,CAAP;AAGD;;AAED,OAAO,UAAUC,aAAV,GAA0B;AAC/B,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,QAAIC,IAAI,GAAG,MAAMR,IAAI,CAACG,WAAD,CAArB;AAEA,UAAML,GAAG,CAACI,uBAAuB,CAACM,IAAI,CAACC,IAAN,CAAxB,CAAT;AACD,GALD,CAKE,OAAOC,CAAP,EAAU;AACVJ,IAAAA,OAAO,CAACK,KAAR,CAAcD,CAAd;AACD;AACF;AAED,OAAO,UAAUE,YAAV,GAAyB;AAC9B,QAAMb,SAAS,CAAC,oBAAD,EAAuBc,qBAAvB,CAAf;AACD","sourcesContent":["import { put, takeEvery, call } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {loadTableResultsSuccess} from '../actions/table.actions';\r\n\r\nfunction fetchQuakes() {\r\n  return axios.get(\r\n    \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/significant_week.geojson\"\r\n  );\r\n}\r\n\r\nexport function* workerGetUser() {\r\n  try {\r\n    console.log(\"handleLoadQuakes\");\r\n    let resp = yield call(fetchQuakes);\r\n\r\n    yield put(loadTableResultsSuccess(resp.data))\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nexport function* watchGetUser() {\r\n  yield takeEvery(\"LOAD_TABLE_RESULTS\", workerGetTableResults);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}